@import 'gem';
// The main idea here is to make 1rem = 1px in design,
// so when resizing browser window, content should be just scaled via rems

// What rems are supposed to be used for:
//  â€“ Font sizes
//  - Sizes of containers/controls/components
//  - Margins/Paddings
// Do not use rems for borders!

@mixin remBase($widthDesign, $heightDesign) {
	html {
		font-size: calc($gem-coeff * 100 / $widthDesign) + vw;
	}

	// html {
	//     #{$gem}: calc(100vw / #{$widthDesign});
	// }

	@if $heightDesign != 0 {
		@media all and (min-aspect-ratio: #{$widthDesign} / #{$heightDesign}) {
			html {
				font-size: calc(100vh / #{$heightDesign});
			}
		}
	}
}

@mixin remBreakpoint($widthDesign, $heightDesign, $query: 'max-width') {
	@media all and (#{$query}: #{$widthDesign}px) {
		@include remBase($widthDesign, $heightDesign);
	}
}

// This defines base breakpoint, that will be used by default.
// The second parameter allows to take into account height of viewport by design.
// Visually, specifying height means fitting a container to a screen.
// '0' specified for height means that this breakpoint doesn't care about screen height in design

//TODO change breackpoint before realize
// @include remBase(1280, 0);

@include remBase(1440, 0);

// Usually, base breakpoint is for desktop, so other (smaller) bps are specified via 'max-width' media query

// @include remBreakpoint(1024, 0); // tablet landscape
// @include remBreakpoint(768, 0); // tablet
// @include remBreakpoint(480, 0); // mobile

@media all and (max-width: 1023.9px) {
	@include remBase(768, 0);
}

@media all and (max-width: 639.9px) {
	@include remBase(375, 0);
}

// @include remBreakpoint(1900, 0, 'min-width'); // hd
@include remBreakpoint(2561, 1200, 'min-width'); // 4k displays
